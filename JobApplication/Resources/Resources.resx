<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Job Application Management</value>
  </data>
  <data name="Application_InterviewAndDecision" xml:space="preserve">
    <value>You can schedule interviews and record hiring decisions directly in the system. </value>
  </data>
  <data name="Application_ReviewAndUpdate" xml:space="preserve">
    <value>Review applicants’ submissions and update their status according to the process. </value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="CloseDate" xml:space="preserve">
    <value>Close Date</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateDate" xml:space="preserve">
    <value>Create Date</value>
  </data>
  <data name="CreateJobApplication" xml:space="preserve">
    <value>Create Job Application</value>
  </data>
  <data name="CreateNewJob" xml:space="preserve">
    <value>Create New Job</value>
  </data>
  <data name="Decision" xml:space="preserve">
    <value>Decision</value>
  </data>
  <data name="Decisions" xml:space="preserve">
    <value>Decisions</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InterviewDateTime" xml:space="preserve">
    <value>Interview Date and Time</value>
  </data>
  <data name="JobApplications" xml:space="preserve">
    <value>Job applications</value>
  </data>
  <data name="JobDescription" xml:space="preserve">
    <value>Job Description</value>
  </data>
  <data name="JobPosts" xml:space="preserve">
    <value>Job Posts</value>
  </data>
  <data name="Job_AddAndTrack" xml:space="preserve">
    <value>You can add new job postings and monitor the status of current openings. </value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Message_DeleteApplication" xml:space="preserve">
    <value>Are you sure you want to delete this application?</value>
  </data>
  <data name="Message_EmailAlreadyInUse" xml:space="preserve">
    <value>This email is already used by another applicant.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Job title</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="DaysLeftToRespond" xml:space="preserve">
    <value>Days Left to Respond </value>
  </data>
  <data name="ResponseDocument" xml:space="preserve">
    <value>Response document</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="SelectDepartment" xml:space="preserve">
    <value>Select Department</value>
  </data>
  <data name="SelectJob" xml:space="preserve">
    <value>Select Job</value>
  </data>
  <data name="ShowApplications" xml:space="preserve">
    <value>Show Applications</value>
  </data>
  <data name="ShowDecisions" xml:space="preserve">
    <value>Show Decisions</value>
  </data>
  <data name="ShowJobs" xml:space="preserve">
    <value>Show Jobs</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="System_WelcomeMessage" xml:space="preserve">
    <value>Welcome to the Internal Recruitment Management System, designed to streamline the hiring process within the company and document every stage — from posting a job to making a final decision.</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateApplication" xml:space="preserve">
    <value>Update Application</value>
  </data>
  <data name="UpdateJobPost" xml:space="preserve">
    <value>Update Job Post</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Responded" xml:space="preserve">
    <value>Responded</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Delete_It" xml:space="preserve">
    <value>Yes, delete it!</value>
  </data>
  <data name="Message_AreYouSure" xml:space="preserve">
    <value>Are you sure ?</value>
  </data>
  <data name="Warning_DeleteActive" xml:space="preserve">
    <value>You cannot delete this job post because it has active applications.</value>
  </data>
  <data name="Success_JobDeleted" xml:space="preserve">
    <value>Job Deleted Successfully</value>
  </data>
  <data name="Success_JobCreated" xml:space="preserve">
    <value>Job Created Successfully</value>
  </data>
  <data name="error_UnauthorizedAccess" xml:space="preserve">
    <value>Unauthorized Access</value>
  </data>
  <data name="Warning_UpdateActive" xml:space="preserve">
    <value>You cannot update this job post because it has active applications.</value>
  </data>
  <data name="Success_JobUpdated" xml:space="preserve">
    <value>Job Updated Successfully</value>
  </data>
  <data name="Success_JobAppCreated" xml:space="preserve">
    <value>Job Application Created Successfully!</value>
  </data>
  <data name="Success_JobAppUpdated" xml:space="preserve">
    <value>Job Application Updated Successfully!</value>
  </data>
  <data name="Success_JobAppDeleted" xml:space="preserve">
    <value>Job Application Deleted Successfully!</value>
  </data>
  <data name="Warning_DeleteActiveDecision" xml:space="preserve">
    <value>You cannot delete this job application because a decision has already been made regarding it</value>
  </data>
  <data name="Success_JobAppStateUpdated" xml:space="preserve">
    <value>Application State has been Updated Successfully</value>
  </data>
  <data name="Warning_UpdateActiveDecision" xml:space="preserve">
    <value>You cannot Update this job application because a decision has already been made regarding it</value>
  </data>
</root>